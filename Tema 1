<!---
Ejemplos de inserciÃ³n de videos

<video class="stretch" controls><source src="http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4" type="video/mp4"></video>
<iframe width="560" height="315" src="https://www.youtube.com/embed/3RBq-WlL4cU" frameborder="0" allowfullscreen></iframe>

slide: data-background="#ff0000" 
element: class="fragment" data-fragment-index="1"
-->

## Despliegue de aplicaciones web
---
![Despliegue de aplicaciones web](http://jamj2000.github.io/despliegueaplicacionesweb/despliegueaplicacionesweb.png)
<small> 2018-19 - IES Luis VÃ©lez de Guevara - Ã‰cija - Spain </small>


## Servidores web

[![cc-by-sa](http://jamj2000.github.io/despliegueaplicacionesweb/cc-by-sa.png)](http://creativecommons.org/licenses/by-sa/4.0/)


## Ãndice
--- 
- ### IntroducciÃ³n
- ### Apache: InstalaciÃ³n
- ### Apache: Hosts virtuales
- ### Apache: AutenticaciÃ³n bÃ¡sica
- ### Apache: Servidor HTTPS 

<!--- Note: Nota a pie de pÃ¡gina. -->



## IntroducciÃ³n


### En esta Unidad aprenderemos a

- Reconocer los parÃ¡metros de administraciÃ³n mÃ¡s importantes del servidor Web.
- Crear y configurar sitios virtuales.
- Establecer mecanismos para asegurar las comunicaciones entre el cliente y el servidor.
- Realizar los ajustes necesarios para la implantaciÃ³n de aplicaciones en el servidor Web.



## Apache: InstalaciÃ³n

**`apt  install  apache2`**


### CaracterÃ­sticas

- Apache2 es el servidor web mÃ¡s usado actualmente.
- Es **software libre**.
- Tiene un **diseÃ±o modular**. 
- Directorio de configuraciÃ³n principal: **`/etc/apache2`**.
- Archivo de configuraciÃ³n principal: **`apache2.conf`**.
- MÃ³dulos en:
  - **`mods-available`** (disponibles)
  - **`mods-enabled`** (habilitados)
- Sitios en:
  - **`sites-available`** (disponibles)
  - **`sites-enabled`** (habilitados)


### Archivos y carpetas

```
â”œâ”€â”€ apache2.conf
â”œâ”€â”€ conf-available
â”‚Â Â  â””â”€â”€ localized-error-pages.conf
â”œâ”€â”€ conf-enabled
â”œâ”€â”€ envvars
â”œâ”€â”€ magic
â”œâ”€â”€ mods-available
â”‚Â Â  â”œâ”€â”€ ssl.conf
â”‚Â Â  â””â”€â”€ ssl.load
â”œâ”€â”€ mods-enabled
â”‚Â Â  â”œâ”€â”€ ssl.conf -> ../mods-available/ssl.conf
â”‚Â Â  â””â”€â”€ ssl.load -> ../mods-available/ssl.load
â”œâ”€â”€ ports.conf
â”œâ”€â”€ sites-available
â”‚Â Â  â”œâ”€â”€ 000-default.conf
â”‚Â Â  â””â”€â”€ default-ssl.conf
â””â”€â”€ sites-enabled
    â””â”€â”€ 000-default.conf -> ../sites-available/000-default.conf
```


### GestiÃ³n del servicio

```bash
systemctl  start   apache2  # service apache2 start
systemctl  restart apache2  # service apache2 restart
systemctl  stop    apache2  # service apache2 stop
systemctl  status  apache2  # service apache2 status

systemctl  enable  apache2  
systemctl  disable apache2  
```


### Comandos

```bash 
a2dismod   # Deshabilitar mÃ³dulo 
a2enmod    # Habilitar mÃ³dulo

a2dissite  # Deshabilitar sitio
a2ensite   # Habilitar sitio
```


## Apache: Hosts virtuales


### CaracterÃ­sticas

- Apache2 permite tener varios sitios web compartiendo una direcciÃ³n IP.
- Sitio por defecto en **`/var/www/html`**.
- Otros sitios virtuales en:
  - **`/var/www/sitio1`**, **`/var/www/sitio2`**, ...
- Por cada sitio virtual debe existir un archivo de configuraciÃ³n.
- Dicho archivo debe alojarse en:
  - **`/etc/apache2/sites-available`**  


### Archivo de configuraciÃ³n

**`/etc/apache2/sites-available/sitio.conf`**

```
<VirtualHost *:80> 
  ServerName www.sitio.com
  ServerAdmin webmaster@sitio.com
  DocumentRoot /var/www/sitio

</VirtualHost>
```


### Comandos

```bash
a2dissite  sitio           # Deshabilita sitio
a2ensite   sitio           # Habilita sitio
service  apache2  restart  # Reinicia el servidor
```


### ResoluciÃ³n de nombres

- Cuando escribimos una URL en el navegador, Ã©sta debe ser traducida a una IP.
- Este procedimiento se conoce como resoluciÃ³n de nombres.
- Lo habitual es que se encargue el servicio DNS.
- Pero una soluciÃ³n rÃ¡pida para pruebas, es editar el archivo **`/etc/hosts`**.

```
192.168.1.135   www.misitio.com
192.168.1.135   www.mimoodle.com
```



## Apache: AutenticaciÃ³n bÃ¡sica


### CaracterÃ­sticas

- El usuario debe identificarse para acceder a un sitio o carpeta.
- Credenciales de usuario/contraseÃ±a.
- La constraseÃ±a se guarda cifrada en un archivo al que tiene acceso Apache.
- Para cifrar, usamos el comando **`htpasswd`**.
- Indicamos mediante directivas el tipo de autenticaciÃ³n y usuarios permitidos.
- El trÃ¡fico no viaja cifrado. No es un mecanismo muy seguro. 
- Actualmente se usa poco.


### Comandos

```bash
mkdir     /var/www/passwd   # creamos directorio
cd        /var/www/passwd   # entramos en directorio
touch     .htpasswd         # creamos archivo
htpasswd  .htpasswd  jose   # aÃ±adimos usuario jose
```

Note: Ejecutar los comandos como usuario **root**.


### Directivas de autenticaciÃ³n

```
<VirtualHost *:80> 
  ServerName www.sitio.com 
  ServerAdmin webmaster@localhost 
  DocumentRoot /var/www/sitio

  <Directory /var/www/sitio> 
    AuthType Basic
    AuthName "Zona Privada"
    AuthUserFile /var/www/passwd/.htpasswd
    Require user jose juan
  </Directory>
</VirtualHost>
```



## Apache: Servidor HTTPS


### CaracterÃ­sticas

- Necesita de un certificado X.509.
- Dos tipos de certificados:
  - Autofirmados.
  - Firmados por una CA (Autoridad de CertificaciÃ³n).
- Permite que el trÃ¡fico viaje cifrado.
- Adicionalmente tambiÃ©n permite autenciaciÃ³n si el certificado estÃ¡ firmado por una CA reconocida.
- HTTPS = HTTP + SSL/TLS

Note: **IMPORTANTE**: La negociaciÃ³n SSL es dependiente totalmente de la IP, asÃ­ que no puedes servir distintos certificados en una misma IP.


### Obtener un certificado

- **`make-ssl-cert`**
- **`openssl`**
- **`xca`**


### make-ssl-cert

```bash
make-Â­ssl-Â­cert  /usr/share/sslÂ­-cert/ssleay.cnf  /etc/ssl/private/nombreÂ­-sitio.pem
```

Note: El ejecutable `make-ssl-cert` viene en el paquete `ssl-cert`


### openssl

```bash
# Generamos clave privada
openssl genrsa -out key 1024

# Generamos CSR y firmamos con nuestra clave privada
openssl req -new -key key -out csr
openssl x509 -req -days 365 -in csr -signkey key -out crt

# Copiamos clave y certificado en el destino
cat key crt > /etc/ssl/private/nombre-sitio.pem
```

Note: CSR = Certificate Signing Request (solicitud de firma de certificado).


### xca

![xca](assets/xca.png)


### Archivo de configuraciÃ³n

**`/etc/apache2/sites-available/default-ssl.conf`**

```
<VirtualHost _default_:443> 
  ServerName nombreÂ­-dominio-Â­sitio
  DocumentRoot /var/www/html
  
  SSLEngine on
  SSLCertificateFile  /etc/ssl/private/nombre-Â­sitio.pem
  ...
  
  <Directory /var/www/html> 
    SSLRequireSSL
    ...
  </Directory>
</VirtualHost>
```


### Comandos

```bash
a2enmod   ssl

a2dissite default-ssl
a2ensite  default-ssl

service  apache2  restart
```


### Resultado

![https](assets/https.png)
